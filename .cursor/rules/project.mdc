---
description: Explanation of the project
globs:
---

# Project description

- The project is known as Leikkipuistokartta in Finnish or PlaygroundMap in English.
- The project is an interactive playground map for tracking visited playgrounds nearby, rating the playgrounds and sharing the ratings.
- The project is implemented in React, Chakra UI v3, Leaflet.
- The backend is Supabase.
- The website is currently hosted on Vercel.
- Always use Chakra UI V3 components.
- Never use @chakra-ui V2 components.
- Find Chakra UI V3 components from https://www.chakra-ui.com/docs/components/concepts/overview.
- Routes are definedin [Router.tsx](mdc:src/Router.tsx)
- CSS can be applied to components by using the `css` prop in Chakra UI V3 instead of sx prop of Chakra UI V2.
- Checkout Chkara UI V3 migration guide from https://www.chakra-ui.com/docs/get-started/migration.
# Theming

The project theming is defined in theme.ts file. Please use the brand and secondary colors for the project for all applicable uses.

# How to do your work

- After changing something, add CHANGELOG.md entry.
- When adding features, add also tests for the feature
- When fixing bugs, add a test for the bug
- When adding tests, run the tests with `npm test`. It might be better to filter to only the new test file.
- When adding translations always add them to @fi.json and @en.json.
- When changing something that might break the build run `npm run build` to check if the build is successful.
- For single command verification run `npm run lint && npm test && npm run build`
- When adding tests, do not hardcode translations but instead use the enTranslations object like in [PlaygroundPopup.test.tsx](mdc:src/components/PlaygroundPopup.test.tsx)
- When changing filters in [PlaygroundFilter.tsx](mdc:src/components/PlaygroundFilter.tsx) make sure to also propagate the filter to @Stats.tsx
- Use button colors according to the brand and secondary colors from [theme.ts](mdc:src/theme.ts). See [MenuDrawer.tsx](mdc:src/components/MenuDrawer.tsx) for example.
